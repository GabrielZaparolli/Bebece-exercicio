import React, { FC } from 'react';
interface OpenMinicartAction {
    type: 'OPEN_MINICART';
}
interface CloseMinicartAction {
    type: 'CLOSE_MINICART';
}
interface SetOpenBehaviorAction {
    type: 'SET_OPEN_BEHAVIOR';
    value: 'click' | 'hover';
}
interface State {
    variation: MinicartVariationType;
    open: boolean;
    hasBeenOpened: boolean;
    /** Controls the minicart opening behavior */
    openBehavior: 'click' | 'hover';
    /** Value provided by the user to openOnHover prop */
    openOnHoverProp: boolean;
}
interface Props {
    openOnHover?: boolean;
    variation?: MinicartVariationType;
}
declare type Action = OpenMinicartAction | CloseMinicartAction | SetOpenBehaviorAction;
declare type Dispatch = (action: Action) => void;
export declare const MinicartStateContext: React.Context<State | undefined>;
declare const MinicartContextProvider: FC<Props>;
declare function useMinicartState(): State;
declare function useMinicartDispatch(): Dispatch;
export { MinicartContextProvider, useMinicartDispatch, useMinicartState };
