import type { DependencyList } from 'react';
declare type Options<Value, Args> = {
    onSuccess?: (value: Value) => void;
    onFailure?: (err: unknown) => void;
    onFinish?: () => void;
    getAutoRunArgs?: () => Args | null;
};
declare const useAsyncCallback: <Value, Args extends unknown[]>(callback: (...args: Args) => Promise<Value>, depsLst: DependencyList, { onSuccess, onFailure, onFinish, getAutoRunArgs, }?: Options<Value, Args>) => [(...args: Args) => Promise<Value>, {
    value: Value | null;
    error: unknown;
    loading: boolean;
}];
export default useAsyncCallback;
